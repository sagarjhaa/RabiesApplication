@using Microsoft.AspNet.Identity
@model RabiesApplication.Web.ViewModels.BiteViewModel

@{
    ViewBag.Title = "Bite Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Bite Form</h3>


@using (Html.BeginForm("Save", "Bites"))
{
    @Html.AntiForgeryToken()

    
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        
            <div class="form-group row">
                @Html.LabelFor(model => model.Bite.BiteDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bite.BiteDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Bite.BiteDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Bite.BiteReportDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bite.BiteReportDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Bite.BiteReportDate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group row">
                @Html.LabelFor(model => model.Bite.BiteReportedBy, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Bite.BiteReportedBy, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Bite.BiteReportedBy, "", new {@class = "text-danger"})
                </div>
            </div>

            
                <div class="form-group row">
                    @Html.LabelFor(model => model.Bite.BiteStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Bite.BiteStatusId, new SelectList(Model.BiteStatuses, "Id", "Description"), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Bite.BiteStatusId, "", new { @class = "text-danger" })
                    </div>
                </div>


            <div class="form-group row">
                @Html.LabelFor(model => model.Bite.StateId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Bite.StateId, new SelectList(Model.States, "Id", "StateName"), "Select State", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Bite.StateId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Bite.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Bite.CityId, new SelectList(Model.Cities, "Id", "CityName"), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Bite.CityId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Bite.EmployeeAssignedId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Bite.EmployeeAssignedId, new SelectList(Model.Employees, "Id", "FirstName"), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Bite.EmployeeAssignedId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Bite.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*<textarea class="form-control" rows="3"></textarea>*@
                    @Html.TextAreaFor(model => model.Bite.Comments,  htmlAttributes : new { @class = "form-control", rows = 5 })
                    @Html.ValidationMessageFor(model => model.Bite.Comments, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-3">
                    @Html.HiddenFor(model => model.Bite.Id)
                    @Html.HiddenFor(model => model.Bite.Active)
                    @Html.HiddenFor(model => model.Bite.EmployeeCreatedId)
                    @Html.HiddenFor(model => model.Bite.RecordCreated)
                    <input type="submit" value="Save" class="btn btn-success btn-block" />
                </div>
            </div>

        

}

<div>
    @Html.ActionLink("Back to List", "Index",null,htmlAttributes:new {@class = "btn btn-link"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>

    $(document)
        .ready(function() {

            $("#Bite_StateId").change(function() {
                var state = this;
                var statevalue = this.options[this.selectedIndex].value;

                GetCities(statevalue);

            });

        });


    function GetCities(statevalue) {
        $.ajax({
            url: '/Bites/GetCitiesByStateId',
            data: { 'stateId': statevalue },
            success: function (result) {
                debugger;
                SetCities(result);
            }
        });
    }

    function SetCities(result) {
        var citySelect = $("#Bite_CityId");
        citySelect.find('option').remove().end();

        citySelect.append('<option value="">Select City</option>');

        for (i = 0; i < result.length; i++) {

            var string = '<option value="' + result[i].Id + '">' + result[i].CityName + '</option>';
            citySelect.append(string);
        }
    }


</script>
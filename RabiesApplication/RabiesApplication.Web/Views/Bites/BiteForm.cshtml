@using Microsoft.AspNet.Identity
@model RabiesApplication.Web.ViewModels.BiteViewModel

@{
    ViewBag.Title = "Bite Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Bite Form</h2>


@using (Html.BeginForm("Save", "Bites"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Bite.BiteDate, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Bite.BiteDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Bite.BiteDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Bite.BiteReportDate, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Bite.BiteReportDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Bite.BiteReportDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Bite.BiteReportedBy, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Bite.BiteReportedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Bite.BiteReportedBy, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">

                @if (Model.Bite.BiteStatusId != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Bite.BiteStatusId, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.Bite.BiteStatusId, new SelectList(Model.BiteStatuses, "Id", "Description"), htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Bite.BiteStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Bite.StateId, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.Bite.StateId, new SelectList(Model.States, "Id", "StateName"), "Select State", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Bite.StateId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Bite.CityId, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.Bite.CityId, new SelectList(Model.Cities, "Id", "CityName"), "Select City", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Bite.CityId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Bite.EmployeeAssignedId, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.Bite.EmployeeAssignedId, new SelectList(Model.Employees, "Id", "FirstName"), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Bite.EmployeeAssignedId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Bite.Comments, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Bite.Comments, new { htmlAttributes = new { @class = "form-control", rows = 2 } })
                        @Html.ValidationMessageFor(model => model.Bite.Comments, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <div class="col-md-offset-3 col-md-3">
                        @Html.HiddenFor(model => model.Bite.Id)
                        @Html.HiddenFor(model => model.Bite.Active)
                        @Html.HiddenFor(model => model.Bite.EmployeeCreatedId)
                        @Html.HiddenFor(model => model.Bite.RecordCreated)
                        <input type="submit" value="Save" class="btn btn-success" style="width: 100%" />
                    </div>
                </div>
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index",null,htmlAttributes:new {@class = "btn btn-link"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

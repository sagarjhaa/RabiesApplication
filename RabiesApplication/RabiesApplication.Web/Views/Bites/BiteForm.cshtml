@using Microsoft.AspNet.Identity
@model RabiesApplication.Web.ViewModels.BiteFormViewModel

@{
    ViewBag.Title = "Incident Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>@ViewBag.Title</h3>


@using (Html.BeginForm("Save", "Bites"))
{
    @Html.AntiForgeryToken()

    
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group row">
                @Html.LabelFor(model => model.BiteDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BiteDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BiteDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.BiteReportDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BiteReportDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BiteReportDate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group row">
                @Html.LabelFor(model => model.BiteReportedBy, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BiteReportedBy, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.BiteReportedBy, "", new {@class = "text-danger"})
                </div>
            </div>

            
                <div class="form-group row">
                    @Html.LabelFor(model => model.BiteStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.BiteStatusId, new SelectList(Model.BiteStatuses, "Id", "Description"), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BiteStatusId, "", new { @class = "text-danger" })
                    </div>
                </div>


            <div class="form-group row">
                @Html.LabelFor(model => model.StateId,"Incident State", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.StateId, new SelectList(Model.States, "Id", "StateName"), "Select State", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CityId,"Incident City", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CityId, new SelectList(Model.Cities, "Id", "CityName"), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.EmployeeAssignedId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.EmployeeAssignedId, new SelectList(Model.Employees, "Key", "Value"), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EmployeeAssignedId, "", new { @class = "text-danger" })
                </div>
            </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Comments, htmlAttributes: new {@class = "form-control", rows = 5})
            @Html.ValidationMessageFor(model => model.Comments, "", new {@class = "text-danger"})
        </div>
    </div>


    <div class="row">
        @Html.LabelFor(model => model.TagNumber, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.TagNumber, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.TagNumber, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="row">
        @Html.LabelFor(model => model.IsVacinated, htmlAttributes: new { @class = "control-label col-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsVacinated)
                @Html.ValidationMessageFor(model => model.IsVacinated, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>



<div class="row">
        @Html.LabelFor(model => model.IsVacinatedPost, htmlAttributes: new { @class = "control-label col-2" })
        <div class="col-md-4">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsVacinatedPost)
                @Html.ValidationMessageFor(model => model.IsVacinatedPost, "", new { @class = "text-danger" })
            </div>
        </div>
   
        @Html.LabelFor(model => model.IsVacinatedPrior, htmlAttributes: new { @class = "control-label col-2" })
        <div class="col-md-4">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsVacinatedPrior)
                @Html.ValidationMessageFor(model => model.IsVacinatedPrior, "", new { @class = "text-danger" })
            </div>
        </div>
</div>



<div class="row">
        @Html.LabelFor(model => model.IsQuarantine, htmlAttributes: new { @class = "control-label col-2" })
        <div class="col-md-4">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsQuarantine)
                @Html.ValidationMessageFor(model => model.IsQuarantine, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.LabelFor(model => model.IsQuarantineCompleted, htmlAttributes: new { @class = "control-label col-2" })
        <div class="col-md-4">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsQuarantineCompleted)
                @Html.ValidationMessageFor(model => model.IsQuarantineCompleted, "", new { @class = "text-danger" })
            </div>
        </div>
</div>

    <div class="row form-group">
       
            @Html.LabelFor(model => model.VaccineDate, htmlAttributes: new {@class = "control-label col-2"})
            <div class="col-md-4">
                @Html.EditorFor(model => model.VaccineDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.VaccineDate, "", new {@class = "text-danger"})
            </div>

     
    
   
            @Html.LabelFor(model => model.VaccineExpirationDate, htmlAttributes: new { @class = "control-label col-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.VaccineExpirationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VaccineExpirationDate, "", new { @class = "text-danger" })
            </div>
    </div>

<div class="row form-group">
        @Html.LabelFor(model => model.QuarantineVerification, htmlAttributes: new { @class = "control-label col-2" })
    <div class="col-md-4">
        @Html.EditorFor(model => model.QuarantineVerification, new {htmlAttributes = new {@class = "form-control"}})
        @Html.ValidationMessageFor(model => model.QuarantineVerification, "", new {@class = "text-danger"})
    </div>


    @Html.LabelFor(model => model.VaccineVerification, htmlAttributes: new { @class = "control-label col-2" })
    <div class="col-md-4">
        @Html.EditorFor(model => model.VaccineVerification, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.VaccineVerification, "", new { @class = "text-danger" })
    </div>
</div>

            <div class="row form-group">
                <div class="offset-2 col-4">
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.Active)
                    @Html.HiddenFor(model => model.EmployeeCreatedId)
                    @Html.HiddenFor(model => model.RecordCreated)
                    <input type="submit" value="Save" class="btn btn-success btn-block"/>
                </div>
                <div class="col-2">
                    @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-outline-primary" })
                </div>
            </div>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>

    $(document)
        .ready(function() {

            $("#StateId").change(function() {
                var state = this;
                var statevalue = this.options[this.selectedIndex].value;

                GetCities(statevalue);

            });

        });


    function GetCities(statevalue) {
        $.ajax({
            url: '/Bites/GetCitiesByStateId',
            data: { 'stateId': statevalue },
            success: function (result) {
                SetCities(result);
            }
        });
    }

    function SetCities(result) {
        var citySelect = $("#CityId");
        citySelect.find('option').remove().end();

        for (i = 0; i < result.length; i++) {

            var string = '<option value="' + result[i].Id + '">' + result[i].CityName + '</option>';
            citySelect.append(string);
        }
    }


</script>
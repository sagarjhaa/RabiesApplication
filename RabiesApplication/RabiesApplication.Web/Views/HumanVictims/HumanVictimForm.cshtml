@model RabiesApplication.Web.ViewModels.HumanVictimViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm("Save","HumanVictims")) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>HumanVictim</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.HumanVictim.BiteId)
        @Html.HiddenFor(model => model.HumanVictim.Id)



        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HumanVictim.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HumanVictim.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HumanVictim.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HumanVictim.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.Dateofbirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HumanVictim.Dateofbirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HumanVictim.Dateofbirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.Addressline1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HumanVictim.Addressline1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HumanVictim.Addressline1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.Addressline2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HumanVictim.Addressline2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HumanVictim.Addressline2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.CityId, "CityId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.HumanVictim.CityId,new SelectList(Model.Cities,"Id","CityName"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HumanVictim.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.CountyId, "CountyId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.HumanVictim.CountyId, new SelectList(Model.Counties,"Id","CountyName"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HumanVictim.CountyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.StateId, "StateId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.HumanVictim.StateId, new SelectList(Model.States,"Id","StateName"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HumanVictim.StateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.Zipcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HumanVictim.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HumanVictim.Zipcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.Contactnumber1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HumanVictim.Contactnumber1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HumanVictim.Contactnumber1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.Contactnumber2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HumanVictim.Contactnumber2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HumanVictim.Contactnumber2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.BiteType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HumanVictim.BiteType)
                    @Html.ValidationMessageFor(model => model.HumanVictim.BiteType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.BiteTypeNonBite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HumanVictim.BiteTypeNonBite)
                    @Html.ValidationMessageFor(model => model.HumanVictim.BiteTypeNonBite, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.PostExposureProphylaxis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HumanVictim.PostExposureProphylaxis)
                    @Html.ValidationMessageFor(model => model.HumanVictim.PostExposureProphylaxis, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HumanVictim.MedicalTreatmentProvider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HumanVictim.MedicalTreatmentProvider, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HumanVictim.MedicalTreatmentProvider, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
